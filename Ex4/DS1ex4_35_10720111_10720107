// 10720111 陳少暉 10720107 陳丕中

#include<iostream>
#include<vector>
#include<string>

using namespace std ;

class sortQueue {
	
public :
	void Queue :: isEmpty() { // isEmpty
		if ( frontPtr == NULL )
		    return true ;
		else if ( backPtr == NULL )
		    return true ;
	    else
	        return false ;
	}
	
	void Queue :: enQueue ( int num ) { // enQueue
		QueueNode * newPtr = new QueueNode ;
		newPtr->num = newNum ;
		newPtr->next = NULL ;
		
		if ( isEmpyt() ) 
		    frontPtr = newPtr ;
		else 
		    backPtr->next = newPtr ;
		    
	    backPtr = newPtr ;
	}
	
	void Queue :: deQueue () { // deQueue
		if ( isEmpty() ) {
			printf( "is Empty!") ;
		} // if
		else {
		
		    QueueNode * tempPtr = frontPtr ;
		    if ( frontPtr == backPtr ) {
		    	frontPtr = NULL ;
		    	backPtr = NULL ;
		    } // if
		    else {
		    	front = front->next ;
		    } // else
		
		    tempPtr->next = NULL ;
	    	delete tempPtr ;
	    } // else
	}
	
	void Queue :: getFront ( int num ) {
		if ( isEmpty() )
		    printf("is Empty!!") ;
		    
	    else
	        num = front->num ;
	}
	
	
		
private :
	struct QueueNode {
		int num ;
		QueueNode * next ;
	};
	
	QueueNode * backPtr ;
	QueueNode * frontPtr ;
	
		
}; 

struct Job {

    int ID ;
    int arrival ;
    int duration ;
    int timeout ;

};

class JobQueue {



    public:

    void Push() ;
    void Pop() ;
    void Front() ;
    void Back() ;

};

class JobList {


public:

    void ShellSort() ;
    bool Load() ;

};

void JobList::ShellSort(){



} // ShellSort

bool JobList::Load( string fileName ) {

    FILE *infile = NULL ;
    bool success = false ;

    fileName = "input" + fileName + ".txt" ;
    infile = fopen(fileName.c_str(), "r") ;

	if ( infile == NULL )
		;
	else{

        char temp ;

        while ( fscanf( infile, "%c", temp ) != EOF && temp != '\n' )
            ;

        vector<Job> jobList ;
        Job aJob ;
        while ( fscanf( infile, "%d %d %d %d", aJob.ID, aJob.arrival, aJob.duration, aJob.timeout ) != EOF )
            jobList.push_back( aJob ) ;

        success = true ;
        fclose( infile ) ;

	} // else

	return success ;

} // Load

int main(){



    return 0 ;

} // main()
